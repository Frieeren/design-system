name: Component CD
on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Version update type'
        required: true
        type: choice
        options:
          - patch # 0.0.1 -> 0.0.2
          - minor # 0.0.1 -> 0.1.0
          - major # 0.0.1 -> 1.0.0
          - prerelease # 0.0.1 -> 0.0.2-alpha.1234567890
  push:
    branches:
      - main
    paths:
      - packages/frieeren-components/**
permissions:
  contents: write
env:
  PROJECT_PATH: packages/frieeren-components
  BOT_GITHUB_ACTOR: frieeren[bot]
  BOT_GITHUB_EMAIL: frieeren2@gmail.com
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  Deploy:
    runs-on: ubuntu-latest
    if: "!(github.event_name == 'push' && github.actor == 'frieeren[bot]')"
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 22.x
        uses: actions/setup-node@v2
        with:
          node-version: 22.x
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-store-dir-path
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Components
        run: pnpm run build:frieeren-components

      - name: Increment version
        working-directory: ${{ env.PROJECT_PATH }}
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION_TYPE="${{ inputs.version-type }}"
          else
            VERSION_TYPE="patch"
          fi

          git config --local user.email "${{ env.BOT_GITHUB_EMAIL }}"
          git config --local user.name "${{ env.BOT_GITHUB_ACTOR }}"

          COMMIT_SHORT=$(git rev-parse --short HEAD)
          if [ "$VERSION_TYPE" == "prerelease" ]; then
            pnpm version prerelease --preid="alpha.${COMMIT_SHORT}" --no-git-tag-version
          else
            pnpm version "$VERSION_TYPE"
            git add .
            git commit -m "chore(components): bump version to $VERSION_TYPE"
          fi

      - name: Push changes
        if: inputs.version-type != 'prerelease'
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      - name: Deploy
        working-directory: ${{ env.PROJECT_PATH }}
        run: pnpm run deploy
